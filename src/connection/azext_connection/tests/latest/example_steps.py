# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


from .. import try_manual


# EXAMPLE: /Linker/put/PutLink
@try_manual
def step_linker_create(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az connection linker create '
             '--name "{myLinker}" '
             '--auth-info "{{\\"name\\":\\"name\\",\\"authType\\":\\"secret\\",\\"secret\\":\\"secret\\"}}" '
             '--target-id "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.DocumentDb/database'
             'Accounts/test-acc/mongodbDatabases/test-db" '
             '--resource-uri "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Micro'
             'soft.Web/sites/test-app"',
             checks=[])
    test.cmd('az connection linker wait --created '
             '--name "{myLinker}"',
             checks=checks)


# EXAMPLE: /Linker/get/Link
@try_manual
def step_linker_show(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az connection linker show '
             '--name "{myLinker}" '
             '--resource-uri "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Micro'
             'soft.Web/sites/test-app"',
             checks=checks)


# EXAMPLE: /Linker/get/LinkList
@try_manual
def step_linker_list(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az connection linker list '
             '--resource-uri "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Micro'
             'soft.Web/sites/test-app"',
             checks=checks)


# EXAMPLE: /Linker/patch/PatchLink
@try_manual
def step_linker_update(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az connection linker update '
             '--name "{myLinker}" '
             '--auth-info "{{\\"authType\\":\\"servicePrincipalSecret\\",\\"clientId\\":\\"name\\",\\"principalId\\":\\'
             '"id\\",\\"secret\\":\\"secret\\"}}" '
             '--target-id "/subscriptions/{subscription_id}/resourceGroups/{rg}/providers/Microsoft.DocumentDb/database'
             'Accounts/test-acc/mongodbDatabases/test-db" '
             '--resource-uri "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Micro'
             'soft.Web/sites/test-app"',
             checks=checks)


# EXAMPLE: /Linker/post/GetConfiguration
@try_manual
def step_linker_list_configuration(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az connection linker list-configuration '
             '--name "{myLinker}" '
             '--resource-uri "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Micro'
             'soft.Web/sites/test-app"',
             checks=checks)


# EXAMPLE: /Linker/post/ValidateLinkFailure
@try_manual
def step_linker_validate_linker(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az connection linker validate-linker '
             '--name "{myLinker}" '
             '--resource-uri "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Micro'
             'soft.Web/sites/test-app"',
             checks=checks)


# EXAMPLE: /Linker/post/ValidateLinkSuccess
@try_manual
def step_linker_validate_linker2(test, rg, checks=None):
    return step_linker_validate_linker(test, rg, checks)


# EXAMPLE: /Linker/delete/DeleteLink
@try_manual
def step_linker_delete(test, rg, checks=None):
    if checks is None:
        checks = []
    test.cmd('az connection linker delete -y '
             '--name "{myLinker}" '
             '--resource-uri "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Micro'
             'soft.Web/sites/test-app"',
             checks=checks)

